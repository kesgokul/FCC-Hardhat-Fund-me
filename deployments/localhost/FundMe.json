{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_WithdrawFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "getFundersToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3df3010e6bb47e3b445138b346e297f97f0cb34e80dea9bc0a5a82ad0c98cc5b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "961246",
    "logsBloom": "0x
    "blockHash": "0x91c4949fff313093edf8a8853b477fe63101133914d37275df3c2518e7031fc4",
    "transactionHash": "0x3df3010e6bb47e3b445138b346e297f97f0cb34e80dea9bc0a5a82ad0c98cc5b",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "961246",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "1d89fe378880b66a605f5d5a62a0d843",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_WithdrawFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"getFundersToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\nimport \\\"./lib/Conversion.sol\\\";\\n\\nerror FundMe__NotOwner();\\nerror FundMe_WithdrawFailed();\\n\\ncontract FundMe {\\n    using Conversion for uint256;\\n\\n    uint256 constant MIN_USD_AMOUNT = 50;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    mapping(address => uint256) private s_fundersToAmount;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner, \\\"You are not the owner\\\");\\n        if (msg.sender != i_owner) revert FundMe__NotOwner(); // new gas optimized way\\n        _;\\n    }\\n\\n    // Fallbacks\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        //1. get the conversion rate usd/eth\\n        //2. check if it meets the min usd val\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MIN_USD_AMOUNT,\\n            \\\"Did not send enought Ether\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_fundersToAmount[msg.sender] = msg.value;\\n    }\\n\\n    //Function to withdraw funds from the contract and reset the mapping of s_funders\\n    function withdraw() public onlyOwner {\\n        //1. reset mapping of s_fundersToAmount\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            address funder = s_funders[i];\\n            s_fundersToAmount[funder] = 0;\\n        }\\n\\n        //2. reset the s_funders array\\n        s_funders = new address[](0);\\n\\n        //3. Withdraw the contract funds to the owner\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Transfer failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_fundersToAmount[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (!callSuccess) revert FundMe_WithdrawFailed();\\n    }\\n\\n    // view and pure functions\\n    function getFunders(uint256 _index) public view returns (address) {\\n        return s_funders[_index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFundersToAmount(address _funder) public view returns (uint256) {\\n        return s_fundersToAmount[_funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x12da495700ef584fec60ea71db550727b112abff6acaf4d5c2524afc6c788ff2\",\"license\":\"MIT\"},\"contracts/lib/Conversion.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary Conversion {\\n    function getLatestPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 _ethValue,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getLatestPrice(priceFeed);\\n        uint256 ethInUsd = (_ethValue * ethPrice) / 1e18;\\n        return ethInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x41d7aa62c579308f6d459bd8fb4a60ea198244662d830557d6f9cc4ab2f7098d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200117d3803806200117d83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161100462000179600039600081816102ff0152818161054101526105da01526110046000f3fe6080604052600436106100745760003560e01c80639e87a5cd1161004e5780639e87a5cd1461010c578063b60d428814610137578063b8c67af314610141578063be2693f01461017e57610083565b80633a7b6c741461008d5780633ccfd60b146100ca578063893d20e8146100e157610083565b3661008357610081610195565b005b61008b610195565b005b34801561009957600080fd5b506100b460048036038101906100af9190610a22565b6102b6565b6040516100c19190610a90565b60405180910390f35b3480156100d657600080fd5b506100df6102fd565b005b3480156100ed57600080fd5b506100f661053d565b6040516101039190610a90565b60405180910390f35b34801561011857600080fd5b50610121610565565b60405161012e9190610b0a565b60405180910390f35b61013f610195565b005b34801561014d57600080fd5b5061016860048036038101906101639190610b51565b61058f565b6040516101759190610b8d565b60405180910390f35b34801561018a57600080fd5b506101936105d8565b005b60326101cc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461087390919063ffffffff16565b101561020d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020490610c05565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008082815481106102cb576102ca610c25565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610382576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561042d5760008082815481106103a7576103a6610c25565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042590610c83565b915050610385565b50600067ffffffffffffffff81111561044957610448610ccb565b5b6040519080825280602002602001820160405280156104775781602001602082028036833780820191505090505b506000908051906020019061048d929190610940565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b490610d2b565b60006040518083038185875af1925050503d80600081146104f1576040519150601f19603f3d011682016040523d82523d6000602084013e6104f6565b606091505b505090508061053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053190610d8c565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106e057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610696575b5050505050905060005b815181101561076b57600082828151811061070857610707610c25565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076390610c83565b9150506106ea565b50600067ffffffffffffffff81111561078757610786610ccb565b5b6040519080825280602002602001820160405280156107b55781602001602082028036833780820191505090505b50600090805190602001906107cb929190610940565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107f290610d2b565b60006040518083038185875af1925050503d806000811461082f576040519150601f19603f3d011682016040523d82523d6000602084013e610834565b606091505b505090508061086f576040517f4aba911200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60008061087f836108af565b90506000670de0b6b3a764000082866108989190610dac565b6108a29190610e1d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109219190610edb565b5050509150506402540be400816109389190610f56565b915050919050565b8280548282559060005260206000209081019282156109b9579160200282015b828111156109b85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610960565b5b5090506109c691906109ca565b5090565b5b808211156109e35760008160009055506001016109cb565b5090565b600080fd5b6000819050919050565b6109ff816109ec565b8114610a0a57600080fd5b50565b600081359050610a1c816109f6565b92915050565b600060208284031215610a3857610a376109e7565b5b6000610a4684828501610a0d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7a82610a4f565b9050919050565b610a8a81610a6f565b82525050565b6000602082019050610aa56000830184610a81565b92915050565b6000819050919050565b6000610ad0610acb610ac684610a4f565b610aab565b610a4f565b9050919050565b6000610ae282610ab5565b9050919050565b6000610af482610ad7565b9050919050565b610b0481610ae9565b82525050565b6000602082019050610b1f6000830184610afb565b92915050565b610b2e81610a6f565b8114610b3957600080fd5b50565b600081359050610b4b81610b25565b92915050565b600060208284031215610b6757610b666109e7565b5b6000610b7584828501610b3c565b91505092915050565b610b87816109ec565b82525050565b6000602082019050610ba26000830184610b7e565b92915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676874204574686572000000000000600082015250565b6000610bef601a83610ba8565b9150610bfa82610bb9565b602082019050919050565b60006020820190508181036000830152610c1e81610be2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c8e826109ec565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cc057610cbf610c54565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d15600083610cfa565b9150610d2082610d05565b600082019050919050565b6000610d3682610d08565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610d76600f83610ba8565b9150610d8182610d40565b602082019050919050565b60006020820190508181036000830152610da581610d69565b9050919050565b6000610db7826109ec565b9150610dc2836109ec565b9250828202610dd0816109ec565b91508282048414831517610de757610de6610c54565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e28826109ec565b9150610e33836109ec565b925082610e4357610e42610dee565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e6d81610e4e565b8114610e7857600080fd5b50565b600081519050610e8a81610e64565b92915050565b6000819050919050565b610ea381610e90565b8114610eae57600080fd5b50565b600081519050610ec081610e9a565b92915050565b600081519050610ed5816109f6565b92915050565b600080600080600060a08688031215610ef757610ef66109e7565b5b6000610f0588828901610e7b565b9550506020610f1688828901610eb1565b9450506040610f2788828901610ec6565b9350506060610f3888828901610ec6565b9250506080610f4988828901610e7b565b9150509295509295909350565b6000610f6182610e90565b9150610f6c83610e90565b9250828202610f7a81610e90565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fb257610fb1610c54565b5b8282058414831517610fc757610fc6610c54565b5b509291505056fea2646970667358221220f4c02658836b4820f0598e8601e50dbfe029a1e609826dad4fb0c30bde18135a64736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_fundersToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}